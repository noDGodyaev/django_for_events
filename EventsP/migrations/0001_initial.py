# Generated by Django 3.0.3 on 2020-05-05 12:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('ev_id', models.AutoField(primary_key=True, serialize=False)),
                ('ev_name', models.CharField(max_length=50)),
                ('event_features', models.CharField(blank=True, max_length=40000, null=True)),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'db_table': 'ev_events',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('p_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=20, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=20, verbose_name='Фамилия')),
                ('family_name', models.CharField(max_length=20, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=15, unique=True, verbose_name='Телефон')),
                ('group_name', models.CharField(blank=True, max_length=10, null=True, verbose_name='Номер группы')),
                ('telegram_id', models.CharField(max_length=50, unique=True, verbose_name='Телеграм id')),
                ('vk_url', models.CharField(max_length=50, verbose_name='VK')),
                ('status', models.SmallIntegerField(choices=[(0, 'Без статуса'), (1, 'Организатор'), (2, 'Участник')], default=0, verbose_name='Статус')),
            ],
            options={
                'db_table': 'ev_people',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonWithPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Люди по должностям',
                'verbose_name_plural': 'Люди по должностям',
                'db_table': 'ev_person_posts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('place_id', models.AutoField(primary_key=True, serialize=False)),
                ('place_name', models.CharField(max_length=50, verbose_name='Название')),
                ('features', models.TextField(blank=True, max_length=40000, null=True, verbose_name='Особенности')),
            ],
            options={
                'verbose_name': 'Место',
                'verbose_name_plural': 'Места',
                'db_table': 'ev_places',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('post_name', models.CharField(blank=True, max_length=40, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
                'db_table': 'ev_posts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('r_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_num', models.IntegerField(verbose_name='Номер комнаты')),
                ('room_floor', models.IntegerField(blank=True, null=True, verbose_name='Этаж')),
                ('room_building', models.CharField(blank=True, max_length=5, null=True, verbose_name='Корпус/Строение')),
                ('bed_num', models.IntegerField(verbose_name='Всего кроватей')),
                ('features', models.TextField(blank=True, max_length=40000, null=True)),
            ],
            options={
                'verbose_name': 'Комната',
                'verbose_name_plural': 'Комнаты',
                'db_table': 'ev_rooms',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('t_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
                'db_table': 'ev_teams',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='EventsP.Person')),
                ('org_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Организатор',
                'verbose_name_plural': 'Организаторы',
                'db_table': 'ev_org',
                'managed': True,
            },
            bases=('EventsP.person',),
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Начало')),
                ('event_end_time', models.DateTimeField(blank=True, null=True, verbose_name='Окончание')),
                ('id_event', models.ForeignKey(db_column='id_event', on_delete=django.db.models.deletion.CASCADE, to='EventsP.Event', verbose_name='Место')),
                ('id_person_post', models.ForeignKey(db_column='id_person_post', on_delete=django.db.models.deletion.CASCADE, to='EventsP.PersonWithPost')),
                ('place', models.ForeignKey(blank=True, db_column='id_place', null=True, on_delete=django.db.models.deletion.CASCADE, to='EventsP.Place')),
                ('team', models.ForeignKey(blank=True, db_column='id_team', null=True, on_delete=django.db.models.deletion.CASCADE, to='EventsP.Team')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписание',
                'db_table': 'ev_timetable',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='personwithpost',
            name='id_post',
            field=models.ForeignKey(db_column='id_post', on_delete=django.db.models.deletion.CASCADE, to='EventsP.Post', verbose_name='Должность'),
        ),
        migrations.CreateModel(
            name='Requisite',
            fields=[
                ('req_id', models.AutoField(primary_key=True, serialize=False)),
                ('req_name', models.CharField(max_length=20, verbose_name='Название')),
                ('req_amount', models.DecimalField(decimal_places=0, max_digits=5, verbose_name='Количество')),
                ('req_description', models.CharField(blank=True, max_length=4000, null=True, verbose_name='Описание')),
                ('req_owner', models.ForeignKey(db_column='req_owner', on_delete=django.db.models.deletion.CASCADE, to='EventsP.Org', verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Реквизит',
                'verbose_name_plural': 'Реквизит',
                'db_table': 'ev_requisite',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='personwithpost',
            name='id_person',
            field=models.ForeignKey(db_column='org_id', on_delete=django.db.models.deletion.CASCADE, to='EventsP.Org', verbose_name='ФИО'),
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='EventsP.Person')),
                ('part_id', models.AutoField(primary_key=True, serialize=False)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата Рождения')),
                ('check_in', models.TimeField(blank=True, null=True, verbose_name='Время заезда')),
                ('arrive_status', models.IntegerField(choices=[(0, 'Не приехал'), (1, 'Приехал'), (2, 'Выехал')], default=0, verbose_name='Статус прибытия')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EventsP.Room', verbose_name='Комната')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EventsP.Team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'db_table': 'ev_part',
                'managed': True,
            },
            bases=('EventsP.person',),
        ),
    ]
